/*
 * NotStopAlarm
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using Logic;

using Microsoft.OpenApi.Models;

using Model;

using Repositories;

using RepositoriesImplementations;

using Serilog;

namespace IO.Swagger
{
	/// <summary>
	/// Startup
	/// </summary>
	public class Startup
	{
		private readonly IWebHostEnvironment _hostingEnv;

		private IConfiguration Configuration { get; }

		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="env"></param>
		/// <param name="configuration"></param>
		public Startup(IWebHostEnvironment env, IConfiguration configuration)
		{
			_hostingEnv = env;
			Configuration = configuration;

			Log.Logger = new LoggerConfiguration()
				.ReadFrom.Configuration(configuration)
				.WriteTo.File("logs/log.txt")
				.CreateLogger();
		}

		/// <summary>
		/// This method gets called by the runtime. Use this method to add services to the container.
		/// </summary>
		/// <param name="services"></param>
		public void ConfigureServices(IServiceCollection services)
		{
			services
				.AddMvc()
				.AddXmlSerializerFormatters();

			services
				.AddControllers()
				.AddNewtonsoftJson();

			services
				.AddSingleton<IAlarmClockRepo, AlarmClockFileRepo>()
				.AddSingleton<INoteRepo, NoteFileRepo>()
				.AddSingleton(new Stopwatch(
					"Секундомер",
					System.Drawing.Color.White,
					new System.Diagnostics.Stopwatch(),
					new SortedSet<DateTime>(),
					false
				))
				.AddSingleton<IAlarmClockService, AlarmClockService>()
				.AddSingleton<INoteService, NoteService>()
				.AddSingleton<IStopwatchService, StopwatchService>();

			services
				.AddSwaggerGen(c =>
				{
					c.SwaggerDoc("0.1.0", new OpenApiInfo
					{
						Version = "0.1.0",
						Title = "NotStopAlarm",
						Description = "NotStopAlarm (ASP.NET Core 3.1)",
						Contact = new OpenApiContact()
						{
							Name = "Swagger Codegen Contributors",
							Url = new Uri("https://github.com/swagger-api/swagger-codegen"),
							Email = ""
						},
						TermsOfService = new Uri("https://example.com/terms")
					});
					c.CustomSchemaIds(type => type.FullName);
					c.IncludeXmlComments($"{AppContext.BaseDirectory}{Path.DirectorySeparatorChar}{_hostingEnv.ApplicationName}.xml");
					//c.DocumentFilter<CustomSwaggerFilter>();
					c.ResolveConflictingActions(apiDescriptions => apiDescriptions.First());
				});
		}

		/// <summary>
		/// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
		/// </summary>
		/// <param name="app"></param>
		/// <param name="env"></param>
		/// <param name="loggerFactory"></param>
		public void Configure(IApplicationBuilder app, IWebHostEnvironment env, ILoggerFactory loggerFactory)
		{
			app.UseRouting()
				.UseStaticFiles()
				.UseSwagger(c =>
				{
					c.RouteTemplate = Environment.GetEnvironmentVariable("SWAGGER_ROUTETEMPLATE");
				})
				.UseSwaggerUI(c =>
				{
					c.RoutePrefix = Environment.GetEnvironmentVariable("SWAGGER_ROUTEPREFIX");
					c.SwaggerEndpoint(Environment.GetEnvironmentVariable("SWAGGER_SWAGGERENDPOINT"), "NotStopAlarm");
				})
				.UseEndpoints(endpoints =>
				{
					endpoints.MapControllers();
				})
				.UseDeveloperExceptionPage();
		}
	}
}
